<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button.Buttons" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAATCAYAAABlcqYFAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAACwwAAAsMAT9AIsgAAASESURBVEhLpZULUNRVFMa/fSG7
        y2sRXGhFNHxBCAimKI5YMqiQoGi6SZPgCxWGZBAtGQlxBEvAB6kQBmo6CSlNSs2Ig/gYtZQJ3GQHcIEF
        EjKkCcO0Qr8ulDaaDo6emTN37v2fe373fufM/UP5KqAKBixGADIHQBMHWE4GFFrAehKgjQDckgD7ALGu
        A9SvAEPTAAc9YCXiLIYBUivhUwB5vDzFNsO6Ab4IlTiJfD7C/QC8KEThIpLYQYZF2Jl6OZk/dFbTr9Dn
        NgIRJR0tIL4vCpkgErjC2ipJWpRZs5G3/+rmHz13Wd9Vy8DDAfcRgfVSr8cgUjvAdgUwwF/INejpcg3b
        BAycK6SagsG6DNXZfHMWr3e30NhpoKHje5q7Glj3i5HjiscQIUh8KJfCVeg6HK72mTikmo8Fco2ATHxK
        TVIAm4Xw9trvYDzQup2Gzss8136SZ6+f4Pm2cn7bfo5J5+KozbWkbAb29kGUUwHJWHiMyLGvTjGsZPAJ
        9ztqPeLUonDaOY8WXukG6DZjWuAxl7YDrdmsaD/G4y0Heaz5IL9uKWKpuZhRFbOo2QnK3wXhiVRYegtI
        BKaMKXBq+bBmLUua9vFT00cMv+hB7VpsdpgJWV93iU6zEB2neRP68Atutwpb03mkNZcHm7bxs8bt/Lxx
        Fwvqszn/tD9d9oKqBAHwRr6oiA3UQZjpXIBf4y8t4N7ardxh3MDddancY0phZLUPh2ejcGg8VDbiMLo4
        rI40uvd88mMyC5rTuKchuc/zG9O41ZjAkDPDOPoQqEnCPYk70gVAIRxwjkaueyk46gslF1T4c0N1NLcY
        Y7m1Lp7bTPFcWu9Hr0IcHZmB7CXXPO/vaI3ldnMss5pWMLtRjKZYJl2dwxkXBnJ8CXpvf0fuhtV9yR+Y
        XQh2+Qq6rwAN/wqcUKbkvIujuOpKIN+vDWOaSc8Ykw9jmj2Z3qLnJvNcftAUxvcapnNV7XiGV2k5vVLJ
        oG+UfClRclOmw1uPAHonMit4aqNQFVAEBp2Rcmw5OO40OPkCGFw5gOEGG0bW6rjs2kiuaHDnctNILqrX
        cbZRydcM4DyjLSNOaukSL22S2WPa/wAPFiQKDHFaiPLXjyoY8Z01J1+UcuolAa0G36iR8+06R8Y2juIa
        sy/XNo9nonksVzaNEKM3I0+9TJcYSZVUDdGL/ZkEA0W7Fs/8Us3FVwYz2CBnyFU5l5iGcF2zP7e0hTLn
        hp67f17Ijzv0zLsRzaUVXhy8COUSC4gXrD+TPAxQDpqOnFkldkys82J0g44JZh9mtc/m/s4YlnSt48nf
        01l2K5PLK3zpPB/FkMCxv/T/fP8P0juT2k/E+rCjmp7M5lnMujGHeR3vsPRWCq/2HKLh7hEuO+VNhxnI
        EbHqvu3SZ8E8CunbYeOJxaGHrbsL2pex9LeNrPyzgDV3jzO6bPQ9uwAk9/bMw5o+L6Q3gcoVocH7LH8q
        7ljD87fzGXl8aLfaE0seP/dz3+SBhEonTArOUzSGFaluWrkh/EnCvBjkXxkHaOBh6Yjef9wTrT/I39Nl
        EULOPppeAAAAAElFTkSuQmCC
</value>
  </data>
</root>